class Sort {
	public static void main(String[] id) {
		QuickSort qs;
		Data data;
		int[] array;
		int i;

		qs = new QuickSort();
		data = new Data();

		array = data.getData();
		array = qs.sort(array);

		i = 0;
		while (i < array.length) {
			System.out.println(array[i]);
			i = i + 1;
		}
	}
}

class QuickSort {

	public int[] sort(int[] array) {
		int t;
		t = this.quicksort(array, 0, array.length - 1);

		return array;
	}

	public int quicksort(int[] v, int first, int last) {
		int t;
		int pivot;
		int[] newPivotRange;

		if (first < last) {
			// poorly chosen pivot
			pivot = v[first];
			newPivotRange = this.partition(v, first, last, pivot);

			t = this.quicksort(v, first, newPivotRange[0] - 1);
			t = this.quicksort(v, newPivotRange[1] + 1, last);
		} else {

		}

		return 0;
	}

	public int[] partition(int[] v, int first, int last, int pivot) {
		int low;
		int mid;
		int high;
		int a;
		int[] ret;

		low = first;
		mid = first;
		high = last;

		while (mid < high + 1) {
			a = v[mid];
			if (a < pivot) {
				v[mid] = v[low];
				v[low] = a;
				low = low + 1;
				mid = mid + 1;
			} else {

			}
			if (a < (pivot + 1) && (pivot < (a + 1))) {
				mid = mid + 1;
			} else {

			}
			if (pivot < a) {
				v[mid] = v[high];
				v[high] = a;
				high = high - 1;
			} else {

			}
		}

		ret = new int[2];
		ret[0] = low;
		ret[1] = high;

		return ret;
	}
}


class Data {
	public int[] getData() {
		int[] a;a = new int[4500];a[0]=28601;a[1]=25055;a[2]=58431;a[3]=62569;a[4]=37598;a[5]=45677;a[6]=8311;a[7]=12459;a[8]=28365;a[9]=57549;a[10]=27190;a[11]=34022;a[12]=32972;a[13]=40896;a[14]=45930;a[15]=3453;a[16]=44184;a[17]=35415;a[18]=45478;a[19]=47454;a[20]=31949;a[21]=64798;a[22]=64538;a[23]=63497;a[24]=61311;a[25]=49936;a[26]=50690;a[27]=62433;a[28]=27474;a[29]=23269;a[30]=62896;a[31]=14386;a[32]=42102;a[33]=2033;a[34]=48861;a[35]=42336;a[36]=65433;a[37]=58753;a[38]=61928;a[39]=30516;a[40]=34008;a[41]=12159;a[42]=1695;a[43]=30936;a[44]=58904;a[45]=52075;a[46]=49874;a[47]=34118;a[48]=28048;a[49]=33110;a[50]=39789;a[51]=52882;a[52]=473;a[53]=4253;a[54]=28068;a[55]=59682;a[56]=31185;a[57]=46661;a[58]=24065;a[59]=7018;a[60]=24241;a[61]=53298;a[62]=54050;a[63]=45373;a[64]=54236;a[65]=18374;a[66]=26152;a[67]=304;a[68]=14945;a[69]=4365;a[70]=49973;a[71]=13233;a[72]=50266;a[73]=25211;a[74]=27979;a[75]=42875;a[76]=45146;a[77]=42409;a[78]=8355;a[79]=57708;a[80]=11772;a[81]=40003;a[82]=24997;a[83]=4077;a[84]=1759;a[85]=11496;a[86]=25911;a[87]=15335;a[88]=22044;a[89]=46555;a[90]=25731;a[91]=63328;a[92]=31930;a[93]=29803;a[94]=21861;a[95]=36803;a[96]=51740;a[97]=55921;a[98]=39;a[99]=24881;a[100]=55891;a[101]=39641;a[102]=30173;a[103]=42275;a[104]=17717;a[105]=60513;a[106]=50499;a[107]=753;a[108]=58386;a[109]=54814;a[110]=40387;a[111]=49355;a[112]=21805;a[113]=57344;a[114]=21401;a[115]=48326;a[116]=53579;a[117]=12552;a[118]=16391;a[119]=34758;a[120]=55300;a[121]=18756;a[122]=56305;a[123]=60405;a[124]=62623;a[125]=22450;a[126]=1434;a[127]=18719;a[128]=61541;a[129]=18265;a[130]=42721;a[131]=8650;a[132]=20662;a[133]=43191;a[134]=10674;a[135]=41555;a[136]=43115;a[137]=10018;a[138]=20930;a[139]=1050;a[140]=52520;a[141]=39067;a[142]=15984;a[143]=2560;a[144]=34551;a[145]=11614;a[146]=18349;a[147]=24579;a[148]=1210;a[149]=8784;a[150]=5682;a[151]=46110;a[152]=4658;a[153]=16468;a[154]=28797;a[155]=9386;a[156]=17849;a[157]=62704;a[158]=31966;a[159]=14412;a[160]=25059;a[161]=37120;a[162]=63113;a[163]=51606;a[164]=35248;a[165]=17014;a[166]=338;a[167]=48534;a[168]=26940;a[169]=6070;a[170]=15948;a[171]=13740;a[172]=19274;a[173]=63437;a[174]=47146;a[175]=11598;a[176]=38085;a[177]=34370;a[178]=5828;a[179]=32393;a[180]=7288;a[181]=31042;a[182]=26121;a[183]=37803;a[184]=16469;a[185]=33927;a[186]=50100;a[187]=64951;a[188]=26191;a[189]=7508;a[190]=60931;a[191]=52578;a[192]=54125;a[193]=35269;a[194]=64341;a[195]=49716;a[196]=44591;a[197]=8155;a[198]=1110;a[199]=30276;a[200]=49172;a[201]=12983;a[202]=6972;a[203]=50509;a[204]=47925;a[205]=57211;a[206]=14906;a[207]=54589;a[208]=23217;a[209]=19454;a[210]=6163;a[211]=16343;a[212]=45375;a[213]=31671;a[214]=29654;a[215]=22174;a[216]=18706;a[217]=32914;a[218]=34880;a[219]=19535;a[220]=32714;a[221]=18237;a[222]=34625;a[223]=14048;a[224]=36736;a[225]=65057;a[226]=58065;a[227]=19270;a[228]=22904;a[229]=47716;a[230]=11107;a[231]=6703;a[232]=58064;a[233]=12901;a[234]=16464;a[235]=30338;a[236]=52322;a[237]=23834;a[238]=36553;a[239]=44852;a[240]=6043;a[241]=37504;a[242]=39426;a[243]=19420;a[244]=34511;a[245]=26177;a[246]=63390;a[247]=40102;a[248]=56937;a[249]=31841;a[250]=30219;a[251]=4940;a[252]=48848;a[253]=35181;a[254]=15187;a[255]=39227;a[256]=38957;a[257]=50435;a[258]=62870;a[259]=14388;a[260]=63397;a[261]=12384;a[262]=21932;a[263]=39071;a[264]=18408;a[265]=64414;a[266]=33044;a[267]=38075;a[268]=35666;a[269]=44627;a[270]=8091;a[271]=24746;a[272]=43414;a[273]=3016;a[274]=58898;a[275]=36956;a[276]=6835;a[277]=64835;a[278]=50355;a[279]=44333;a[280]=6199;a[281]=64410;a[282]=38159;a[283]=60907;a[284]=59317;a[285]=56144;a[286]=8725;a[287]=48541;a[288]=13370;a[289]=26961;a[290]=37747;a[291]=2949;a[292]=16792;a[293]=50164;a[294]=60557;a[295]=48263;a[296]=45321;a[297]=40006;a[298]=22522;a[299]=20900;a[300]=1236;a[301]=53880;a[302]=4263;a[303]=45355;a[304]=3095;a[305]=30938;a[306]=27948;a[307]=45129;a[308]=6485;a[309]=8550;a[310]=3981;a[311]=15960;a[312]=41541;a[313]=44826;a[314]=55210;a[315]=56105;a[316]=52687;a[317]=53071;a[318]=19407;a[319]=9314;a[320]=49598;a[321]=34357;a[322]=45686;a[323]=19209;a[324]=5373;a[325]=2012;a[326]=29473;a[327]=21650;a[328]=11279;a[329]=7843;a[330]=26577;a[331]=36665;a[332]=1987;a[333]=62445;a[334]=31753;a[335]=38493;a[336]=36460;a[337]=2342;a[338]=20259;a[339]=13604;a[340]=16867;a[341]=29415;a[342]=9605;a[343]=35377;a[344]=16444;a[345]=56386;a[346]=63986;a[347]=21815;a[348]=29794;a[349]=12750;a[350]=18602;a[351]=9257;a[352]=30086;a[353]=33942;a[354]=54169;a[355]=23178;a[356]=28604;a[357]=4103;a[358]=31331;a[359]=52124;a[360]=5179;a[361]=19879;a[362]=61727;a[363]=41304;a[364]=62543;a[365]=43843;a[366]=40595;a[367]=34630;a[368]=52288;a[369]=53420;a[370]=7259;a[371]=62858;a[372]=43590;a[373]=49263;a[374]=30976;a[375]=39419;a[376]=34576;a[377]=52457;a[378]=8206;a[379]=3561;a[380]=46147;a[381]=7222;a[382]=26894;a[383]=34026;a[384]=50592;a[385]=59906;a[386]=21611;a[387]=19720;a[388]=18981;a[389]=11336;a[390]=57623;a[391]=28667;a[392]=8837;a[393]=8004;a[394]=19443;a[395]=35941;a[396]=43355;a[397]=16656;a[398]=34398;a[399]=15608;a[400]=3473;a[401]=29932;a[402]=24105;a[403]=50117;a[404]=44257;a[405]=37003;a[406]=2429;a[407]=65396;a[408]=31376;a[409]=52777;a[410]=15121;a[411]=55853;a[412]=3990;a[413]=62628;a[414]=57874;a[415]=45344;a[416]=23651;a[417]=17133;a[418]=26982;a[419]=46656;a[420]=50201;a[421]=55971;a[422]=42043;a[423]=42022;a[424]=53505;a[425]=8218;a[426]=48693;a[427]=24335;a[428]=8091;a[429]=46380;a[430]=57174;a[431]=12149;a[432]=12708;a[433]=10202;a[434]=8035;a[435]=45655;a[436]=43184;a[437]=58642;a[438]=54724;a[439]=43497;a[440]=59609;a[441]=59317;a[442]=47554;a[443]=18879;a[444]=61710;a[445]=19002;a[446]=11238;a[447]=41718;return a;
	}
}
