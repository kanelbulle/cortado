
import java_cup.runtime.*;
import se.cortado.Scanner;

/* Preliminaries to set up and use the scanner.  */
//init with {: scanner.init(); :};

parser code {:
	private Lexer lexer;
	private File file;
	
	public Parser(File file) {
		this();
		this.file = file;
		try {
			lexer = new Lexer(new FileReader(file));
		}
		catch (IOException exception) {
			throw new Error("Unable to open file \"" + file + "\"");
		}
	}

:};

scan with {: return lexer.yylex(); :};

/* ======== Terminals (tokens returned by the scanner) ======== */

/* Statements */
terminal		IF, ELSE, WHILE, SYSOUT;

/* Expressions */
terminal 		LENGTH, TRUE, FALSE, THIS, BANG;

/* Datatypes */
terminal 		INT, INT_ARRAY, BOOLEAN, STRING, IDENTIFIER;

/* Operators */
terminal     	PLUS, MINUS, MULTIPLY, LPAREN, RPAREN, LBRACKET, RBRACKET, LCURLY, RCURLY, AND, LESS;
terminal Integer    NUMBER;

terminal SEMI;
/* Non terminals */
non terminal            expr_list, expr_part;
non terminal Integer    expr, term, factor;

/* Precedences */
precedence left PLUS, MINUS;

/* The grammar */
expr_list ::= expr_list expr_part | 
              expr_part;
expr_part ::= expr SEMI;
expr      ::= 	expr:e1 PLUS expr:e2 {: System.out.println(e1.intValue() + e2.intValue()); :}
		| expr MINUS expr  
		| LPAREN expr RPAREN
		| NUMBER
		;

